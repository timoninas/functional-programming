; 7. Пусть list-of-list список, состоящий из списков. Написать функцию,
; которая вычисляет сумму длин всех элементов list-of-list,
; т.е. например для аргумента ((1 2) (3 4)) -> 4.

; 8. Написать рекурсивную версию (с именем reg-add) вычисления суммы чисел заданного списка.
; Например: (reg-add (2 4 6)) -> 12

; 9. Написать рекурсивную версию с именем recnth функции nth.

; 10. Написать рекурсивную функцию alloddr, которая возвращает t когда все
; элементы списка нечетные.

; 11. Написать рекурсивную функцию, относящуюся к хвостовой рекурсии с одним тестом завершения, 
; которая возвращает последний элемент списка - аргументы.

; 12. Написать рекурсивную функцию, относящуюся к дополняемой рекурсии с
; одним тестом завершения, которая вычисляет сумму всех чисел от 0 до n-ого аргумента функции.
; Вариант: 1) от п-аргумента функции до последнего >= 0,
; 2) от п-аргумента функции до т-аргумента с шагом d.

; 13. Написать рекурсивную функцию, которая возвращает последнее нечетное
; число из числового списка, возможно создавая некоторые вспомогательные функции.

; 14. Используя cons-дополняемую рекурсию с одним тестом завершения,
; написать функцию которая получает как аргумент список чисел, 
; а возвращает список квадратов этих чисел в том же порядке.


; 15. Написать функцию с именем select-odd, которая из заданного
; списка выбирает все нечетные числа. (Вариант 1: select-even,
; вариант 2: вычисляет сумму всех нечетных чисел(sum-all-odd) или 
; сумму всех четных чисел (sum-all-even) из заданного списка. )





; Реализовать с помощью хвостовой рекурсии