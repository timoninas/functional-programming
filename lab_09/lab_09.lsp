; 2. Написать предикат set-equal, который возвращает t, если два его множество-
; аргумента содержат одни и те же элементы, порядок которых не имеет значения.

; 3. Напишите необходимые функции, которые обрабатывают таблицу из точечных пар:
; (страна. столица), и возвращают по стране - столицу, а по столице - страну.

; 7. Напишите функцию, которая умножает на заданное число-аргумент все числа
; из заданного списка-аргумента, когда 
; a) все элементы списка --- числа,
; 6) элементы списка -- любые объекты.

; 2. Напишите функцию, которая уменьшает на 10 все числа из списка аргумента этой функции.

; 3. Написать функцию, которая возвращает первый аргумент списка -аргумента. который сам является 
; непустым списком.

; 4. Написать функцию, которая выбирает из заданного списка только те числа, 
; которые больше 1 и меньше 10.
; (Вариант: между двумя заданными границами. )

; 5. Написать функцию, вычисляющую декартово произведение двух своих списков- аргументов. 
; (Напомним, что А х В это множество всевозможных пар (a b), где а принадлежит А, принадлежит В.)

; 6. Почему так реализовано reduce, в чем причина? (reduce #*+0) -> 0
; (reduce #*+ ()) -> 0














; Постараться реализовать с помощью функционалов и рекурсии